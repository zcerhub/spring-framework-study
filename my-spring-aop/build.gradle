plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenLocal()
	maven {
		url = uri('http://repo.ctbiyi.com:6442/repository/maven-public/')
	}

	maven {
		url = uri('http://repo.maven.apache.org/maven2')
	}
}
dependencies {
	implementation 'com.google.guava:guava:21.0'
	implementation 'cglib:cglib:3.3.0'
	implementation 'org.aspectj:aspectjweaver:1.9.6'
	implementation 'org.springframework:spring-core:5.2.8.RELEASE'
	implementation 'junit:junit:4.12'
	implementation 'org.apache.commons:commons-collections4:4.2'
	implementation 'org.slf4j:slf4j-api:1.7.28'
	implementation 'org.apache.commons:commons-lang3:3.11'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}


jar {
	String someString = ''
	configurations.runtime.each {someString = someString + " lib\\"+it.name}
	manifest {
		attributes 'Main-Class': 'com.example.myspring.v4.config.GetResourceTest'
		attributes 'Class-Path': someString
	}
}

//清除上次的编译过的文件
task clearPj(type:Delete){
	delete 'build','target'
}

task copyJar(type:Copy){
	from configurations.runtime
	into ('build/libs/lib')

}

//把JAR复制到目标目录
task release(type: Copy,dependsOn: [build,copyJar]) {
//    from  'conf'
//    into ('build/libs/eachend/conf') // 目标位置
}